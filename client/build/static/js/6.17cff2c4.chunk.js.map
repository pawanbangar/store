{"version":3,"sources":["pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/collection-item/collection-item.component.jsx","components/with-spinner/with.spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx"],"names":["connect","state","ownProps","collection","SelectCollection","match","params","collectionId","items","title","className","map","item","key","id","mapStateToProps","createStructuredSelector","isLoading","selectisCollectionLoading","CollectionPageContainer","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectioForPreview","Object","keys","collectionUrlParam","selectIsCollectionFetching","isFetching","dispatch","addItem","name","price","imageUrl","style","backgroundImage","onClick","inverted","SpinnerOverlay","styled","div","SpinnerContainer","WrappedComponent","otherProps"],"mappings":"kOA0BeA,eAHO,SAACC,EAAMC,GAAP,MAAmB,CACrCC,WAAWC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAErDD,EApBM,SAAC,GAAgB,IAAfG,EAAc,EAAdA,WAEZK,EAAcL,EAAdK,MAAMC,EAAQN,EAARM,MACb,OACA,yBAAKC,UAAU,mBACX,wBAAIA,UAAU,SAASD,GACnB,yBAAKC,UAAU,SAEPF,EAAMG,KAAI,SAAAC,GAAI,OACL,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,GAAIF,KAAMA,YCR3DG,EAAgBC,YAAyB,CAC3CC,UAAU,SAAAhB,GAAK,OAAGiB,YAA0BjB,MAG1CkB,EAAyBC,YAC3BpB,YAAQe,GACRM,IAF2BD,CAG7BE,GAEaH,a,gCChBf,oJAEMI,EAAY,SAAAtB,GAAK,OAAEA,EAAMuB,MAElBC,EAAkBC,YAC/B,CAACH,IACG,SAAAC,GAAI,OAAEA,EAAKG,eAEFC,EAA0BF,YACnC,CAACD,IACD,SAAAE,GAAW,OAAEA,EAAYE,OAAOC,KAAKH,GAAahB,KAAI,SAAAE,GAAG,OAAEc,EAAYd,MAAM,MAEpET,EAAiB,SAAA2B,GAAkB,OAAEL,YAClD,CAACD,IACG,SAAAE,GAAW,OAAEA,EAAYA,EAAYI,GAAoB,OAGhDC,EAA2BN,YACxC,CAACH,IACG,SAAAC,GAAI,OAAEA,EAAKS,cAEFf,EAA0BQ,YACnC,CAACH,IACD,SAAAC,GAAI,QAAIA,EAAKG,gB,gCCvBjB,kDA6Be3B,gBAAQ,MAJE,SAAAkC,GAAQ,MAAG,CAChCC,QAAQ,SAACvB,GAAD,OAAQsB,EAASC,YAAQvB,QAGtBZ,EAvBM,SAAC,GAAkB,IAAjBY,EAAgB,EAAhBA,KAAKuB,EAAW,EAAXA,QACjBC,EAAqBxB,EAArBwB,KAAKC,EAAgBzB,EAAhByB,MAAMC,EAAU1B,EAAV0B,SAClB,OACA,yBAAK5B,UAAU,mBACX,yBAAKA,UAAU,QAEf6B,MAAO,CAACC,gBAAgB,OAAD,OAAQF,EAAR,QAIvB,yBAAK5B,UAAU,qBACX,0BAAMA,UAAU,QAAQ0B,GACxB,0BAAM1B,UAAU,SAAS2B,IAG7B,kBAAC,IAAD,CAAcI,QAAS,kBAAIN,EAAQvB,IAAO8B,UAAQ,GAAlD,oB,uwBCnBD,IAAMC,EAAiBC,IAAOC,IAAV,KAQdC,EAAmBF,IAAOC,IAAV,KCAdxB,IAPG,SAAA0B,GAAgB,OAAG,YAA8B,IAA5B9B,EAA2B,EAA3BA,UAAa+B,EAAc,6BAC9D,OAAO/B,EACE,kBAAC0B,EAAD,KACL,kBAACG,EAAD,OAEC,kBAACC,EAAqBC","file":"static/js/6.17cff2c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './collection.styles.scss';\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\nimport {SelectCollection} from '../../redux/shop/shop.selectors';\r\nimport {connect} from 'react-redux';\r\n\r\nconst CollectionPage=({collection})=>{\r\n    \r\n    const {items,title} =collection;\r\n    return(\r\n    <div className='collection-page'>\r\n        <h2 className='title'>{title}</h2>\r\n            <div className='items'>\r\n            {\r\n                    items.map(item=>(\r\n                             <CollectionItem key={item.id} item={item} />\r\n                             ))\r\n                }\r\n            </div>\r\n    </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps=(state,ownProps)=>({\r\n    collection:SelectCollection(ownProps.match.params.collectionId)(state)\r\n})\r\nexport default connect(mapStateToProps)(CollectionPage);","import {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {selectisCollectionLoading} from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport {compose} from 'redux';\r\nimport CollectionPage from './collection.component';\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    isLoading:state=>!selectisCollectionLoading(state)\r\n});\r\n\r\nconst CollectionPageContainer =compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n","import {createSelector} from 'reselect';\r\n\r\nconst selectShop =state=>state.shop;\r\n\r\nexport const selectCollections=createSelector(\r\n[selectShop],\r\n    shop=>shop.collections\r\n);\r\nexport const selectCollectioForPreview=createSelector(\r\n    [selectCollections],\r\n    collections=>collections?Object.keys(collections).map(key=>collections[key]):[]\r\n)\r\nexport const SelectCollection=collectionUrlParam=>createSelector(\r\n[selectCollections],\r\n    collections=>collections?collections[collectionUrlParam]:[]\r\n);\r\n\r\nexport const selectIsCollectionFetching=createSelector(\r\n[selectShop],\r\n    shop=>shop.isFetching\r\n);\r\nexport const selectisCollectionLoading=createSelector(\r\n    [selectShop],\r\n    shop=>!!shop.collections\r\n)","import React from 'react';\r\nimport {CustomButton} from '../custom-button/custom-button';\r\nimport {connect} from 'react-redux';\r\nimport {addItem} from '../../redux/cart/cart.actions';\r\nimport './collection-item.style.scss';\r\n\r\nconst CollectionItem=({item,addItem})=>{\r\n    const {name,price,imageUrl}=item;\r\n    return(\r\n    <div className='collection-item'>\r\n        <div className='image'\r\n        \r\n        style={{backgroundImage:`url(${imageUrl})`\r\n               }}>\r\n        \r\n        </div>\r\n        <div className='collection-footer'>\r\n            <span className='name'>{name}</span>\r\n            <span className='price'>{price}</span>\r\n        \r\n        </div>\r\n        <CustomButton onClick={()=>addItem(item)} inverted>Add to Cart</CustomButton>\r\n    \r\n    </div>\r\n )}\r\nconst mapDispatchToProps=dispatch=>({\r\n    addItem:(item)=>dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(CollectionItem);","import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {SpinnerContainer,SpinnerOverlay} from './with.spinner.styles';\r\n\r\nconst WithSpinner=WrappedComponent=> ({isLoading,...otherProps})=>{\r\n    return isLoading?\r\n            (<SpinnerOverlay>\r\n        <SpinnerContainer></SpinnerContainer>\r\n        </SpinnerOverlay>):\r\n        (<WrappedComponent {...otherProps}/>);\r\n};\r\nexport default WithSpinner;"],"sourceRoot":""}