{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-out/sign-in-and-sign-out.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","otherProps","className","onChange","connect","dispatch","googleSignIn","googleSignInStart","emailSignIn","email","password","emailSignInStart","useState","userCredentials","setCredentials","event","target","name","onSubmit","preventDefault","type","onClick","isGoogleSignIn","signUpStart","displayName","confirmPassword","handleSubmit","a","alert","required","SignInandSignOutPage"],"mappings":"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","file":"static/js/5.409c0f47.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport './form-input.style.scss';\r\n\r\nexport const FormInput = ({handleChange,label,...otherProps}) =>(\r\n    <div className='group'>\r\n    <input className='form-input' onChange={handleChange} {...otherProps}/>\r\n        {\r\n            label?\r\n                (<label className={`${otherProps.value.length?'shrink':''} form-input-label`}>\r\n                {label}\r\n                </label>)\r\n            :null\r\n        }\r\n    </div>\r\n    \r\n)","import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './sign-in.style.scss';\r\nimport {FormInput} from '../form-input/form-input.component';\r\nimport {CustomButton} from '../custom-button/custom-button';\r\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/user.actions'\r\n\r\nconst SignIn=({emailSignIn,googleSignIn})=>{\r\n\r\nconst [userCredentials,setCredentials]=useState({email:'',password:''})\r\n    const {email,password}=userCredentials;\r\n     const handleSubmit= event =>{\r\n        event.preventDefault();\r\n         \r\n         emailSignIn(email,password);\r\n         \r\n    }\r\n     const handleChange= event =>{\r\n         const {value,name} =event.target;\r\n         setCredentials({...userCredentials,[name]:value})\r\n     }\r\n        return(\r\n            <div className='sign-in'>\r\n            <h2>I Aleready Have an Account?</h2>\r\n            <span>Sign in with your Email and Password</span>\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput name='email' handleChange={handleChange} label='email' type='email' value={email}/>\r\n                <FormInput name='password' handleChange={handleChange} label='password' type='password' value={password}/>\r\n                <div className='buttons'>\r\n                <CustomButton type='submit'>Sign In</CustomButton>\r\n                <CustomButton type='button' onClick={googleSignIn} isGoogleSignIn>Sign In With Google</CustomButton>\r\n                \r\n                </div>\r\n                \r\n            </form>\r\n                </div>\r\n        \r\n        )\r\n    }\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    googleSignIn:()=>dispatch(googleSignInStart()),\r\n    emailSignIn:(email,password)=>dispatch(emailSignInStart({email,password}))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignIn);","import React,{useState} from 'react';\r\nimport {FormInput} from '../form-input/form-input.component';\r\nimport {CustomButton} from '../custom-button/custom-button';\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport {connect} from 'react-redux';\r\nimport './sign-up.style.scss';\r\nconst Signup =({signUpStart})=>{\r\n    const [userCredentials,setCredentials]=useState({email:'',password:'',displayName:'',confirmPassword:''});\r\n    const {displayName,email,password,confirmPassword}=userCredentials;\r\n\r\n    const handleSubmit =async event =>{\r\n        event.preventDefault();\r\n               \r\n            if(password!==confirmPassword){\r\n                alert('password don\\'t match');\r\n            }\r\n            signUpStart({displayName,email,password});\r\n    }\r\n    const handleChange =(event)=>{\r\n        const {name,value}=event.target;\r\n        setCredentials({...userCredentials,\r\n            [name]:value\r\n        })\r\n    }\r\n        return(\r\n            <div className='sign-up'>\r\n            <h2 className='title'>I Do Not Have an Account</h2>\r\n            <span>Sign Up With Your Email and Password</span>\r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    type='text'\r\n                    name='displayName'\r\n                    value={displayName}\r\n                    onChange={handleChange}\r\n                    label='Display Name'\r\n                    required\r\n                    >\r\n                \r\n                </FormInput>\r\n                <FormInput\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    label='Email'\r\n                    required\r\n                    >\r\n                \r\n                </FormInput>  \r\n                <FormInput\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    label='Password'\r\n                    required\r\n                    >\r\n                \r\n                </FormInput>  \r\n                <FormInput\r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    onChange={handleChange}\r\n                    label='Confirm Password'\r\n                    required\r\n                    >\r\n                \r\n                </FormInput>\r\n                <CustomButton\r\n                    type='submit'>\r\n                SIGN UP\r\n                </CustomButton>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\nconst mapDispachToProps=dispatch=>({\r\n    signUpStart:(userCredentials)=>dispatch(signUpStart(userCredentials))\r\n});\r\nexport default connect(null,mapDispachToProps)(Signup);","import React from 'react';\r\nimport './sign-in-and-sign-out.style.scss';\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nexport const SignInandSignOutPage= ()=>(\r\n    <div className='sign-in-and-sign-up'>\r\n    \r\n    <SignIn />\r\n    <SignUp />\r\n    </div>\r\n    \r\n)"],"sourceRoot":""}