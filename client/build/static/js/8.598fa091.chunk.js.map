{"version":3,"sources":["components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.component.jsx"],"names":["connect","dispatch","clearItem","item","removeItemFromCart","removeItem","addItem","cartItem","name","imageUrl","quantity","price","className","src","alt","onClick","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","detail","token","console","log","axios","url","method","data","then","response","alert","JSON","catch","error","stringify","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCountTotal","map","key","id"],"mappings":"+NA4BeA,G,OAAAA,YAAQ,MALC,SAACC,GAAD,MAAa,CACjCC,UAAU,SAAAC,GAAI,OAAEF,EAASG,YAAmBD,KAC5CE,WAAW,SAAAF,GAAI,OAAEF,EAASI,YAAWF,KACrCG,QAAQ,SAAAH,GAAI,OAAEF,EAASK,YAAQH,QAEpBH,EAvBI,SAAC,GAA2C,IAA1CO,EAAyC,EAAzCA,SAASL,EAAgC,EAAhCA,UAAUG,EAAsB,EAAtBA,WAAWC,EAAW,EAAXA,QACxCE,EAA8BD,EAA9BC,KAAKC,EAAyBF,EAAzBE,SAASC,EAAgBH,EAAhBG,SAASC,EAAOJ,EAAPI,MAC9B,OACI,yBAAKC,UAAU,iBACnB,yBAAKA,UAAU,mBACX,yBAAKC,IAAKJ,EAAUK,IAAI,UAExB,0BAAMF,UAAU,QAAQJ,GACxB,0BAAMI,UAAU,YACZ,yBAAKA,UAAU,QAAQG,QAAS,kBAAIV,EAAWE,KAA/C,WACA,0BAAMK,UAAU,SAASF,GACxB,yBAAKE,UAAU,QAAQG,QAAS,kBAAIT,EAAQC,KAA5C,YAEL,0BAAMK,UAAU,SAASD,GACzB,yBAAKC,UAAU,gBAAgBG,QAAS,kBAAIb,EAAUK,KAAtD,e,oCCsBOS,EArCY,SAAC,GAAW,IAAVL,EAAS,EAATA,MACnBM,EAAe,IAAIN,EAmBzB,OACI,kBAAC,IAAD,CACKO,MAAM,UACPV,KAAK,iBACLW,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBX,GAC/BY,OAAQN,EACRO,WAAW,UACXC,OAAO,qBACPC,MA5BK,SAAAA,GACVC,QAAQC,IAAIF,GACZG,IAAM,CACFC,IAAI,iEACJC,OAAO,OACPT,YAAY,cACZU,KAAK,CACDT,OAAON,EACPS,WAELO,MAAK,SAAAC,GACPC,MAAM,sBAAsBD,EAASE,WACnCC,OAAM,SAAAC,GACLH,MAAMC,KAAKG,UAAUD,QAgBpBE,UA9Bc,gDCoCpBC,G,OAAgBC,YAAyB,CAC3CC,UAAUC,IACVC,MAAMC,OAIK9C,sBAAQyC,EAARzC,EAxCI,SAAC,GAAD,IAAE2C,EAAF,EAAEA,UAAUE,EAAZ,EAAYA,MAAZ,OACnB,yBAAKjC,UAAU,iBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,gBACX,0CAEA,yBAAKA,UAAU,gBACf,8CAEA,yBAAKA,UAAU,gBACf,2CAEA,yBAAKA,UAAU,gBACf,wCAEE,yBAAKA,UAAU,gBACjB,0CAII+B,EAAUI,KAAI,SAAAxC,GAAQ,OACnB,kBAAC,EAAD,CAAcyC,IAAKzC,EAAS0C,GAAI1C,SAAUA,OAGjD,yBAAKK,UAAU,SACf,yCAAeiC,IAEf,kBAAC,EAAD,CAAsBlC,MAAOkC,IAC7B,yBAAKjC,UAAU,gBAAf,qCAAgE,6BAAhE","file":"static/js/8.598fa091.chunk.js","sourcesContent":["import React from 'react';\r\nimport {removeItemFromCart,removeItem,addItem} from '../../redux/cart/cart.actions';\r\nimport {connect} from 'react-redux';\r\nimport './checkout.styles.scss';\r\n\r\nconst CheckoutItem=({cartItem,clearItem,removeItem,addItem})=>{\r\n    const {name,imageUrl,quantity,price}=cartItem;\r\n    return(\r\n        <div className='checkout-item'>\r\n    <div className='image-container'>\r\n        <img src={imageUrl} alt='item'/>\r\n    </div>\r\n        <span className='name'>{name}</span>\r\n        <span className='quantity'>\r\n            <div className='arrow' onClick={()=>removeItem(cartItem)}>&#10094; </div>\r\n            <span className='value'>{quantity}</span>\r\n             <div className='arrow' onClick={()=>addItem(cartItem)}>&#10095; </div>\r\n            </span>\r\n        <span className='price'>{price}</span>\r\n        <div className='remove-button' onClick={()=>clearItem(cartItem)}>&#10005;</div>\r\n    </div>\r\n)\r\n}\r\nconst mapDispathToProps=(dispatch)=>({\r\n    clearItem:item=>dispatch(removeItemFromCart(item)),\r\n    removeItem:item=>dispatch(removeItem(item)) ,\r\n    addItem:item=>dispatch(addItem(item))\r\n    });\r\nexport default connect(null,mapDispathToProps)(CheckoutItem);","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton=({price})=>{\r\n    const priceForStripe=100*price;\r\n     const publishableKey='pk_test_pJSPbP6z7LW73Td69Ur2c8CE00yunIC5N5';\r\n   const onToken=token=>{\r\n       console.log(token);\r\n       axios({\r\n           url:'https://us-central1-store-f7b54.cloudfunctions.net/app/payment',\r\n           method:'post',\r\n           description:'description',\r\n           data:{\r\n               amount:priceForStripe,\r\n               token\r\n           }\r\n       }).then(response=>{\r\n        alert('Payment Successfull'+response.JSON());\r\n       }).catch(error=>{\r\n           alert(JSON.stringify(error));\r\n       })\r\n       \r\n   }\r\n    return(\r\n        <StripeCheckout\r\n             label='PAY NOW'\r\n            name='P.one Clothing'\r\n            billingAddress\r\n            shippingAddress\r\n            image='https://svgshare.com/i/CUz.svg'\r\n            description={`Your Total is $${price}`}\r\n            amount={priceForStripe}\r\n            panelLabel='PAY NOW'\r\n            detail=\"sdsuysgsd dsgsyugs\"\r\n            token={onToken}\r\n            stripeKey={publishableKey}\r\n            />\r\n    );\r\n};\r\n\r\nexport default StripeCheckoutButton;","import React from 'react';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {connect} from 'react-redux';\r\nimport {selectCartItems,selectCountTotal} from '../../redux/cart/cart.selector';\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\r\nimport './checkout.styles.scss';\r\n\r\nconst checkoutPage=({cartItems,total})=>(\r\n<div className='checkout-page'>\r\n<div className='checkout-header'>\r\n<div className='header-block'>\r\n    <span>Product</span>\r\n    </div>\r\n    <div className='header-block'>\r\n    <span>Description</span>\r\n    </div>\r\n    <div className='header-block'>\r\n    <span>Quantity</span>\r\n    </div>\r\n    <div className='header-block'>\r\n    <span>Price</span>\r\n    </div>\r\n      <div className='header-block'>\r\n    <span>Remove</span>\r\n    </div>\r\n</div>\r\n    {\r\n        cartItems.map(cartItem=>\r\n           <CheckoutItem key={cartItem.id} cartItem={cartItem}/>\r\n        )\r\n    }\r\n    <div className='total'>\r\n    <span>Total: ${total}</span>\r\n    </div>\r\n    <StripeCheckoutButton price={total} />\r\n    <div className='test-warning'>Please use the following Details:-<br/>\r\n    Card No:4242 4242 4242 -EXP:06/20 -CVV:123\r\n    \r\n    </div>\r\n    </div>\r\n)\r\nconst mapStateToProps=createStructuredSelector({\r\n    cartItems:selectCartItems,\r\n    total:selectCountTotal\r\n}\r\n)\r\n\r\nexport default connect(mapStateToProps)(checkoutPage);\r\n"],"sourceRoot":""}