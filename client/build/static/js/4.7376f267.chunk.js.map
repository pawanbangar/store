{"version":3,"sources":["components/preview-comp/collection-preview.jsx","components/collections-overview/collections.overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/collection-item/collection-item.component.jsx","components/with-spinner/with.spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx"],"names":["withRouter","title","items","history","className","onClick","push","toLowerCase","toUpperCase","filter","item","idx","map","key","id","mapStateToProp","createStructuredSelector","collections","selectCollectioForPreview","connect","otherCollection","mapStateToProps","isLoading","selectIsCollectionFetching","CollectionOverviewContainer","compose","WithSpinner","CollectionOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","SelectCollection","collectionUrlParam","isFetching","selectisCollectionLoading","dispatch","addItem","name","price","imageUrl","style","backgroundImage","inverted","SpinnerOverlay","styled","div","SpinnerContainer","WrappedComponent","otherProps"],"mappings":"uPAkBeA,G,OAAAA,aAbW,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,MAAMC,EAAd,EAAcA,QAAd,OACtB,yBAAKC,UAAU,sBACX,wBAAIA,UAAU,QAAQC,QAAS,kBAAIF,EAAQG,KAAK,QAAQL,EAAMM,iBAAiBN,EAAMO,eACrF,yBAAKJ,UAAU,WACdF,EAAMO,QAAO,SAACC,EAAKC,GAAN,OAAYA,EAAI,KACzBC,KAAI,SAACF,GAAD,OACL,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,aCI1CK,G,OAAeC,YAAyB,CAC1CC,YAAYC,OAEDC,cAAQJ,EAARI,EAXU,SAAC,GAAD,IAAEF,EAAF,EAAEA,YAAF,OACb,yBAAKb,UAAU,uBACVa,EAAYL,KAAK,gBAAEE,EAAF,EAAEA,GAAOM,EAAT,6BACd,kBAAC,EAAD,eAAmBP,IAAKC,GAAQM,W,QCH9CC,EAAgBL,YAAyB,CAC3CM,UAAUC,MAIRC,EAA6BC,YAC/BN,YAAQE,GACRK,IAF+BD,CAGjCE,GAEaH,a,gCCjBf,oJAEMI,EAAY,SAAAC,GAAK,OAAEA,EAAMC,MAElBC,EAAkBC,YAC/B,CAACJ,IACG,SAAAE,GAAI,OAAEA,EAAKb,eAEFC,EAA0Bc,YACnC,CAACD,IACD,SAAAd,GAAW,OAAEA,EAAYgB,OAAOC,KAAKjB,GAAaL,KAAI,SAAAC,GAAG,OAAEI,EAAYJ,MAAM,MAEpEsB,EAAiB,SAAAC,GAAkB,OAAEJ,YAClD,CAACD,IACG,SAAAd,GAAW,OAAEA,EAAYA,EAAYmB,GAAoB,OAGhDb,EAA2BS,YACxC,CAACJ,IACG,SAAAE,GAAI,OAAEA,EAAKO,cAEFC,EAA0BN,YACnC,CAACJ,IACD,SAAAE,GAAI,QAAIA,EAAKb,gB,gCCvBjB,kDA6BeE,gBAAQ,MAJE,SAAAoB,GAAQ,MAAG,CAChCC,QAAQ,SAAC9B,GAAD,OAAQ6B,EAASC,YAAQ9B,QAGtBS,EAvBM,SAAC,GAAkB,IAAjBT,EAAgB,EAAhBA,KAAK8B,EAAW,EAAXA,QACjBC,EAAqB/B,EAArB+B,KAAKC,EAAgBhC,EAAhBgC,MAAMC,EAAUjC,EAAViC,SAClB,OACA,yBAAKvC,UAAU,mBACX,yBAAKA,UAAU,QAEfwC,MAAO,CAACC,gBAAgB,OAAD,OAAQF,EAAR,QAIvB,yBAAKvC,UAAU,qBACX,0BAAMA,UAAU,QAAQqC,GACxB,0BAAMrC,UAAU,SAASsC,IAG7B,kBAAC,IAAD,CAAcrC,QAAS,kBAAImC,EAAQ9B,IAAOoC,UAAQ,GAAlD,oB,uwBCnBD,IAAMC,EAAiBC,IAAOC,IAAV,KAQdC,EAAmBF,IAAOC,IAAV,KCAdvB,IAPG,SAAAyB,GAAgB,OAAG,YAA8B,IAA5B7B,EAA2B,EAA3BA,UAAa8B,EAAc,6BAC9D,OAAO9B,EACE,kBAACyB,EAAD,KACL,kBAACG,EAAD,OAEC,kBAACC,EAAqBC","file":"static/js/4.7376f267.chunk.js","sourcesContent":["import React from 'react';\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './collection_preview.style.scss';\r\n\r\nconst CollectionPreview = ({title,items,history})=>(\r\n    <div className='collection-preview'>\r\n        <h1 className='title' onClick={()=>history.push('shop/'+title.toLowerCase())}>{title.toUpperCase()}</h1>\r\n        <div className='preview'>\r\n        {items.filter((item,idx)=>idx<4)\r\n            .map((item) =>(\r\n            <CollectionItem key={item.id} item={item}/>\r\n            ))}\r\n        </div>\r\n    \r\n    </div>\r\n);\r\n\r\nexport default withRouter(CollectionPreview);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from  'reselect';\r\nimport {selectCollectioForPreview} from '../../redux/shop/shop.selectors'; \r\nimport CollectionPreview from '../preview-comp/collection-preview';\r\nimport './collections.overview.styles.scss';\r\n\r\nconst CollectionOverview=({collections})=>(\r\n            <div className='collection-overview'>\r\n                {collections.map( ({id, ...otherCollection}) =>(\r\n                    <CollectionPreview key={id} {...otherCollection}/>\r\n                ))\r\n                }\r\n                </div>\r\n        )\r\nconst mapStateToProp=createStructuredSelector({\r\n    collections:selectCollectioForPreview\r\n});\r\nexport default connect(mapStateToProp)(CollectionOverview);","import {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionOverview from './collections.overview.component';\r\nimport {compose} from 'redux';\r\n\r\nconst mapStateToProps=createStructuredSelector({\r\n    isLoading:selectIsCollectionFetching,\r\n\r\n});\r\n\r\nconst CollectionOverviewContainer= compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionOverview);\r\n\r\nexport default CollectionOverviewContainer;","import {createSelector} from 'reselect';\r\n\r\nconst selectShop =state=>state.shop;\r\n\r\nexport const selectCollections=createSelector(\r\n[selectShop],\r\n    shop=>shop.collections\r\n);\r\nexport const selectCollectioForPreview=createSelector(\r\n    [selectCollections],\r\n    collections=>collections?Object.keys(collections).map(key=>collections[key]):[]\r\n)\r\nexport const SelectCollection=collectionUrlParam=>createSelector(\r\n[selectCollections],\r\n    collections=>collections?collections[collectionUrlParam]:[]\r\n);\r\n\r\nexport const selectIsCollectionFetching=createSelector(\r\n[selectShop],\r\n    shop=>shop.isFetching\r\n);\r\nexport const selectisCollectionLoading=createSelector(\r\n    [selectShop],\r\n    shop=>!!shop.collections\r\n)","import React from 'react';\r\nimport {CustomButton} from '../custom-button/custom-button';\r\nimport {connect} from 'react-redux';\r\nimport {addItem} from '../../redux/cart/cart.actions';\r\nimport './collection-item.style.scss';\r\n\r\nconst CollectionItem=({item,addItem})=>{\r\n    const {name,price,imageUrl}=item;\r\n    return(\r\n    <div className='collection-item'>\r\n        <div className='image'\r\n        \r\n        style={{backgroundImage:`url(${imageUrl})`\r\n               }}>\r\n        \r\n        </div>\r\n        <div className='collection-footer'>\r\n            <span className='name'>{name}</span>\r\n            <span className='price'>{price}</span>\r\n        \r\n        </div>\r\n        <CustomButton onClick={()=>addItem(item)} inverted>Add to Cart</CustomButton>\r\n    \r\n    </div>\r\n )}\r\nconst mapDispatchToProps=dispatch=>({\r\n    addItem:(item)=>dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(CollectionItem);","import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {SpinnerContainer,SpinnerOverlay} from './with.spinner.styles';\r\n\r\nconst WithSpinner=WrappedComponent=> ({isLoading,...otherProps})=>{\r\n    return isLoading?\r\n            (<SpinnerOverlay>\r\n        <SpinnerContainer></SpinnerContainer>\r\n        </SpinnerOverlay>):\r\n        (<WrappedComponent {...otherProps}/>);\r\n};\r\nexport default WithSpinner;"],"sourceRoot":""}