{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBOJUykAzORFrM5as1PaTQhCzwDA5T5xuw\",\n  authDomain: \"store-f7b54.firebaseapp.com\",\n  databaseURL: \"https://store-f7b54.firebaseio.com\",\n  projectId: \"store-f7b54\",\n  storageBucket: \"store-f7b54.appspot.com\",\n  messagingSenderId: \"769183748058\",\n  appId: \"1:769183748058:web:6bc341043418f13c45bae3\",\n  measurementId: \"G-NXVWWXNV49\"\n};\nexport const creteProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef; //    console.log(snapshot);\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["V:/new/tailor-service/src/firebase/firebase.util.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","creteProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEE,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,WAAW,EAAE,oCAHM;AAInBC,EAAAA,SAAS,EAAE,aAJQ;AAKnBC,EAAAA,aAAa,EAAE,yBALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB;AAYF,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,QAAP,EAAgBC,cAAhB,KAAkC;AAClE,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,QAAOJ,QAAQ,CAACK,GAAI,EAAnC,CAAd;AACA,QAAMC,QAAQ,GAAC,MAAMJ,OAAO,CAACK,GAAR,EAArB;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAT,EAAJ,EAAsB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAsBV,QAA5B;AACA,UAAMW,SAAS,GAAE,IAAIC,IAAJ,EAAjB;;AACA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAOH,KARD,CAQC,OAAMa,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AACH;AACJ;;AACD,SAAOf,OAAP,CAnBkE,CAoBtE;AACC,CArBM,C,CAsBL;;AACAb,QAAQ,CAAC6B,aAAT,CAAuB5B,cAAvB;AACF,OAAO,MAAM6B,IAAI,GAAC9B,QAAQ,CAAC8B,IAAT,EAAX;AACP,OAAO,MAAMhB,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAEP,MAAMiB,QAAQ,GAAC,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAC,MAAIL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA3B;AACP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBOJUykAzORFrM5as1PaTQhCzwDA5T5xuw\",\r\n    authDomain: \"store-f7b54.firebaseapp.com\",\r\n    databaseURL: \"https://store-f7b54.firebaseio.com\",\r\n    projectId: \"store-f7b54\",\r\n    storageBucket: \"store-f7b54.appspot.com\",\r\n    messagingSenderId: \"769183748058\",\r\n    appId: \"1:769183748058:web:6bc341043418f13c45bae3\",\r\n    measurementId: \"G-NXVWWXNV49\"\r\n  };\r\n\r\n\r\nexport const creteProfileDocument = async (userAuth,additionalData) =>{\r\n    if(!userAuth) return;\r\n    const userRef=firestore.doc(`user/${userAuth.uid}`);\r\n    const snapshot=await userRef.get();\r\n    if(!snapshot.exists()){\r\n        const {displayName,email} = userAuth;\r\n        const createdAt =new Date();\r\n        try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n            \r\n        }catch(error){\r\n            console.log('error creating user',error.message);\r\n        }\r\n    }\r\n    return userRef;\r\n//    console.log(snapshot);\r\n}\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\nexport const auth=firebase.auth();\r\nexport const firestore=firebase.firestore();\r\n\r\nconst provider=new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const SignInWithGoogle=()=>auth.signInWithPopup(provider);\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}